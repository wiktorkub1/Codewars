#include <iostream>
#include <vector>
#include <map>

std::map<int, std::string> hex{
    {0, "0"}, {1, "1"}, {2, "2"}, {3, "3"},
    {4, "4"}, {5, "5"}, {6, "6"}, {7, "7"},
    {8, "8"}, {9, "9"}, {10, "A"}, {11, "B"},
    {12, "C"}, {13, "D"}, {14, "E"}, {15, "F"},
};

class RGBToHex
{
public:
    static std::string rgb(int r, int g, int b);
};

std::string RGBToHex::rgb(int r, int g, int b) {
    if (r > 255) { r = 255; };
    if (g > 255) { g = 255; };
    if (b > 255) { b = 255; };
    if (r < 0) { r = 0; };
    if (g < 0) { g = 0; };
    if (b < 0) { b = 0; };
    int r_rem, g_rem, b_rem;
    r_rem = r % 16;
    g_rem = g % 16;
    b_rem = b % 16;
    r /= 16;
    g /= 16;
    b /= 16;
    
    return hex[r] + hex[r_rem] + hex[g] + hex[g_rem] + hex[b] + hex[b_rem];
}

int main()
{
    std::cout << RGBToHex::rgb(-20, 2, 3);
    return 0;
}
